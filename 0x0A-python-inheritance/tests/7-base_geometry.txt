Import class:
    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

Test 1:
    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

Test 2:
    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0

Test 3:
    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
    ...
    ValueError: distance must be greater than 0

Test 4:
    >>> bg.integer_validator("my_int", 12)

Test 5:
   >>> bg.integer_validator("number", -12)
   Traceback (most recent call last):
   ...
   ValueError: number must be greater than 0

Test 6:
   >>> bg.integer_validator("numbers", 0)
   Traceback (most recent call last):
   ...
   ValueError: numbers must be greater than 0

Test 7:
   >>> bg.integer_validator("infnumber", int('inf'))
   Traceback (most recent call last):
   ...
   ValueError: invalid literal for int() with base 10: 'inf'

Test 8:
    >>> bg.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented